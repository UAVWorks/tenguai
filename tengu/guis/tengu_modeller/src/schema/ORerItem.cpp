// ********************************************************************************************************************
// *                                                                                                                  *
// *                                  The graphical representation for logical OR branching.                          *
// * ---------------------------------------------------------------------------------------------------------------- *
// *                                  Графическое представление ветвления по логическому ИЛИ.                         *
// *                                                                                                                  *
// * Eugene G. Sysoletin <e.g.sysoletin@gmail.com>                                       Created 18 jun 2017 at 09:39 *
// ********************************************************************************************************************

#include "ORerItem.h"

// ********************************************************************************************************************
// *                                                                                                                  *
// *                                                  The constructor.                                                *
// * ---------------------------------------------------------------------------------------------------------------- *
// *                                                     Конструктор.                                                 *
// *                                                                                                                  *
// ********************************************************************************************************************

tengu::ORerItem::ORerItem ( tengu::ORer * entity, QGraphicsItem * parent ) 
    : ItemWithLinks ( entity , parent )
{
    _class_name = "ORerItem";
    _entity_type = ET_ORerItem;
    _boundingRect = QRect( 0, 0, 40, 144 );
    setExecutionMode( EM_ALWAYS );
}

// ********************************************************************************************************************
// *                                                                                                                  *
// *                                            Entity pointer validation.                                            *
// * ---------------------------------------------------------------------------------------------------------------- *
// *                                       Проверка валидности указателя на "сущность".                               *
// *                                                                                                                  *
// ********************************************************************************************************************

void tengu::ORerItem::checkEntity() {
    if ( ! _entity ) _entity = new ORer();
}

// ********************************************************************************************************************
// *                                                                                                                  *
// *                                                The painting method.                                              *
// * ---------------------------------------------------------------------------------------------------------------- *
// *                                                  Метод рисования.                                                *
// *                                                                                                                  *
// ********************************************************************************************************************

void tengu::ORerItem::paint ( QPainter * painter, const QStyleOptionGraphicsItem * option, QWidget * widget ) {
    
    _storePainterSettings( painter );
    _drawTaskRectangle( painter );
    
    // Execution mode pixmap
    // Картинка режима выполнения
    
    QPixmap pm = _executionModePixmap();
    painter->drawPixmap( _boundingRect.width() - 34, 6, pm );
    
    // The || label, we talking about logical OR
    // Надпись ||, мы говорим о логическом ИЛИ
    
    QFont font("Tahoma", 20 );
    font.setBold( true );
    painter->setFont( font );
    painter->drawText( QPoint( 16, _boundingRect.height() - 14 ), "||" );
    
    _restorePainterSettings( painter );
    
}

// ********************************************************************************************************************
// *                                                                                                                  *
// *                                                   The destructor.                                                *
// * ---------------------------------------------------------------------------------------------------------------- *
// *                                                      Деструктор.                                                 *
// *                                                                                                                  *
// ********************************************************************************************************************

tengu::ORerItem::~ORerItem() {

}

