// ********************************************************************************************************************
// *                                                                                                                  *
// *                              Abstract graphics object, representation of AbstractAgent.                          *
// * ---------------------------------------------------------------------------------------------------------------- *
// *                           Абстрактный графический объект, представление AbstractAgent'а.                         *
// *                                                                                                                  *
// * Eugene G. Sysoletin <e.g.sysoletin@gmail.com>                                       Created 08 jun 2017 at 09:00 *
// ********************************************************************************************************************

#include "AbstractAgentItem.h"

// ********************************************************************************************************************
// *                                                                                                                  *
// *                                                  The constructor.                                                *
// * ---------------------------------------------------------------------------------------------------------------- *
// *                                                    Конструктор.                                                  *
// *                                                                                                                  *
// ********************************************************************************************************************

tengu::AbstractAgentItem::AbstractAgentItem(AbstractAgent * agent, QGraphicsItem* parent) 
    : QGraphicsObject( parent )
{
    _agent = agent;
    _boundingRect = QRectF(0, 0, 20, 20);
    _selected = false;
    
    __mousePressed = false;
    
    // setAcceptHoverEvents( true );
    // setAcceptTouchEvents( true );
}

// ********************************************************************************************************************
// *                                                                                                                  *
// *                                   Overrided function for bounding the rectangle.                                 *
// * ---------------------------------------------------------------------------------------------------------------- *
// *                                  Перекрытая функция для привязки прямоугольника.                                 *
// *                                                                                                                  *
// ********************************************************************************************************************

QRectF tengu::AbstractAgentItem::boundingRect() const {
    return _boundingRect;
}

// ********************************************************************************************************************
// *                                                                                                                  *
// *                    Paint function for abstract graphics agent (only for demonstrate it is empty)                 *
// * ---------------------------------------------------------------------------------------------------------------- *
// *             Функция рисования абстрактного графического агента (только чтобы показать, что он пустой)            *
// *                                                                                                                  *
// ********************************************************************************************************************

void tengu::AbstractAgentItem::paint( QPainter * painter, const QStyleOptionGraphicsItem * option, QWidget * widget) {
    painter->drawRect(  _boundingRect );
}

// ********************************************************************************************************************
// *                                                                                                                  *
// *                                      Return agent this graphics item based on.                                   *
// * ---------------------------------------------------------------------------------------------------------------- *
// *                        Вернуть агента, на котором основывается данный графический элемент.                       *
// *                                                                                                                  *
// ********************************************************************************************************************

tengu::AbstractAgent* tengu::AbstractAgentItem::agent() {
    return _agent;
}

// ********************************************************************************************************************
// *                                                                                                                  *
// *                                              Set this agent selection.                                           *
// * ---------------------------------------------------------------------------------------------------------------- *
// *                                        Установка выбранности данного агента.                                     *
// *                                                                                                                  *
// ********************************************************************************************************************

void tengu::AbstractAgentItem::setSelected ( bool selection ) {
    _selected = selection;
    update();
}

// ********************************************************************************************************************
// *                                                                                                                  *
// *                                    Make R-G-B constituent of color to some brighter.                             *
// * ---------------------------------------------------------------------------------------------------------------- *
// *                                     Сделать R-G-B составляющую цвета чуть поярче.                                *
// *                                                                                                                  *
// ********************************************************************************************************************

int tengu::AbstractAgentItem::_brighter ( int color ) {
    color += color / 5;
    if ( color > 255 ) color = 255;
    return color;
}

// ********************************************************************************************************************
// *                                                                                                                  *
// *                                               Mouse press event handler.                                         *
// * ---------------------------------------------------------------------------------------------------------------- *
// *                                            Обработчик события нажатия мышки.                                     *
// *                                                                                                                  *
// ********************************************************************************************************************
/*
void tengu::AbstractAgentItem::mousePressEvent ( QGraphicsSceneMouseEvent * event ) {
    qDebug() << "AbstractAgentItem::mousePressEvent()" ;
    __mousePressed = true;
    QGraphicsItem::mousePressEvent ( event );
}
*/
// ********************************************************************************************************************
// *                                                                                                                  *
// *                                             Mouse release event handler.                                         *
// * ---------------------------------------------------------------------------------------------------------------- *
// *                                        Обработчик события отпускания мыши.                                       *
// *                                                                                                                  *
// ********************************************************************************************************************
/*
void tengu::AbstractAgentItem::mouseReleaseEvent ( QGraphicsSceneMouseEvent * event ) {
    qDebug() << "AbstractAgentItem::mouseReleaseEvent()" ;
    __mousePressed = false;
    QGraphicsItem::mouseReleaseEvent ( event );
}
*/
// ********************************************************************************************************************
// *                                                                                                                  *
// *                                             Mouse move event handler.                                            *
// * ---------------------------------------------------------------------------------------------------------------- *
// *                                         Обработчик события перемещения мыши.                                     *
// *                                                                                                                  *
// ********************************************************************************************************************
/*
void tengu::AbstractAgentItem::mouseMoveEvent ( QGraphicsSceneMouseEvent * event ) {
    qDebug() << "AbstractAgentItem::mouseMoveEvent()";
    QGraphicsItem::mouseMoveEvent ( event );
}
*/
// ********************************************************************************************************************
// *                                                                                                                  *
// *                                                   The destructor.                                                *
// * ---------------------------------------------------------------------------------------------------------------- *
// *                                                      Деструктор.                                                 *
// *                                                                                                                  *
// ********************************************************************************************************************

tengu::AbstractAgentItem::~AbstractAgentItem() {
}


