// ********************************************************************************************************************
// *                                                                                                                  *
// *                              Abstract graphics object, representation of AbstractAgent.                          *
// * ---------------------------------------------------------------------------------------------------------------- *
// *                           Абстрактный графический объект, представление AbstractAgent'а.                         *
// *                                                                                                                  *
// * Eugene G. Sysoletin <e.g.sysoletin@gmail.com>                                       Created 08 jun 2017 at 09:00 *
// ********************************************************************************************************************

#include "AbstractAgentItem.h"

// ********************************************************************************************************************
// *                                                                                                                  *
// *                                                  The constructor.                                                *
// * ---------------------------------------------------------------------------------------------------------------- *
// *                                                    Конструктор.                                                  *
// *                                                                                                                  *
// ********************************************************************************************************************

tengu::AbstractAgentItem::AbstractAgentItem(AbstractAgent * agent, QGraphicsItem* parent) 
    : QGraphicsObject( parent )
{
    _agent = agent;
    _boundingRect = QRectF(0, 0, 20, 20);
    _selected = false;
    
    __mousePressed = false;
    
    // setAcceptHoverEvents( true );
    // setAcceptTouchEvents( true );
}

// ********************************************************************************************************************
// *                                                                                                                  *
// *                                   Overrided function for bounding the rectangle.                                 *
// * ---------------------------------------------------------------------------------------------------------------- *
// *                                  Перекрытая функция для привязки прямоугольника.                                 *
// *                                                                                                                  *
// ********************************************************************************************************************

QRectF tengu::AbstractAgentItem::boundingRect() const {
    return _boundingRect;
}

// ********************************************************************************************************************
// *                                                                                                                  *
// *                    Paint function for abstract graphics agent (only for demonstrate it is empty)                 *
// * ---------------------------------------------------------------------------------------------------------------- *
// *             Функция рисования абстрактного графического агента (только чтобы показать, что он пустой)            *
// *                                                                                                                  *
// ********************************************************************************************************************

void tengu::AbstractAgentItem::paint( QPainter * painter, const QStyleOptionGraphicsItem * option, QWidget * widget) {
    painter->drawRect(  _boundingRect );
}

// ********************************************************************************************************************
// *                                                                                                                  *
// *                                      Return agent this graphics item based on.                                   *
// * ---------------------------------------------------------------------------------------------------------------- *
// *                        Вернуть агента, на котором основывается данный графический элемент.                       *
// *                                                                                                                  *
// ********************************************************************************************************************

tengu::AbstractAgent* tengu::AbstractAgentItem::agent() {
    return _agent;
}

// ********************************************************************************************************************
// *                                                                                                                  *
// *                                              Is this agent selected?                                             *
// * ---------------------------------------------------------------------------------------------------------------- *
// *                                    Является ли данный агент выбранным (отмеченным)?                              *
// *                                                                                                                  *
// ********************************************************************************************************************

bool tengu::AbstractAgentItem::isSelected() {
    return _selected;
}


// ********************************************************************************************************************
// *                                                                                                                  *
// *                                              Set this agent selection.                                           *
// * ---------------------------------------------------------------------------------------------------------------- *
// *                                        Установка выбранности данного агента.                                     *
// *                                                                                                                  *
// ********************************************************************************************************************

void tengu::AbstractAgentItem::setSelected ( bool selection ) {
    _selected = selection;
    update();
}

// ********************************************************************************************************************
// *                                                                                                                  *
// *                                    Make R-G-B constituent of color to some brighter.                             *
// * ---------------------------------------------------------------------------------------------------------------- *
// *                                     Сделать R-G-B составляющую цвета чуть поярче.                                *
// *                                                                                                                  *
// ********************************************************************************************************************

int tengu::AbstractAgentItem::_brighter ( int color ) {
    color += color / 5;
    if ( color > 255 ) color = 255;
    return color;
}

// ********************************************************************************************************************
// *                                                                                                                  *
// *                                         Get border's color for process diagrams.                                 *
// * ---------------------------------------------------------------------------------------------------------------- *
// *                                       Получить цвет границ для диаграмм процессов.                               *
// *                                                                                                                  *
// ********************************************************************************************************************

QColor tengu::AbstractAgentItem::_processDiagram_borderColor() {
    
    QColor bgColor = ORDINAR_BORDER_COLOR;
    if ( _selected ) bgColor = ORDINAR_SELECTED_BORDER_COLOR;
    
    if ( agent()->isFocused() ) {
        if ( _selected ) bgColor = FOCUSED_SELECTED_BORDER_COLOR;
        else bgColor = FOCUSED_BORDER_COLOR;
    };
    
    if ( agent()->isActive() ) {
        if ( _selected ) bgColor = ACTIVE_SELECTED_BORDER_COLOR;
        else bgColor = ACTIVE_BORDER_COLOR;
    };
    
    return bgColor;
    
}

// ********************************************************************************************************************
// *                                                                                                                  *
// *                                   Get shadow's color for processes diagrams.                                     *
// * ---------------------------------------------------------------------------------------------------------------- *
// *                                   Получить цвет теней для диаграмм процессов.                                    *
// *                                                                                                                  *
// ********************************************************************************************************************

QColor tengu::AbstractAgentItem::_processDiagram_shadowColor() {
    QColor c = QColor( 240, 240, 240 );
    if ( _selected ) c = QColor( 220, 220, 220 );
    return c;
}

// ********************************************************************************************************************
// *                                                                                                                  *
// *                                     Get "dark" fill color for process diagrams.                                  *
// * ---------------------------------------------------------------------------------------------------------------- *
// *                               Получить "темный" цвет заполнения для диаграмм процессов.                          *
// *                                                                                                                  *
// ********************************************************************************************************************

QColor tengu::AbstractAgentItem::_processDiagram_darkFillColor() {
    
    QColor c = ORDINAR_FILL_COLOR;
    if ( _selected ) c = ORDINAR_SELECTED_FILL_COLOR;
    
    if ( agent()->isFocused() ) {
        if ( _selected ) c = FOCUSED_SELECTED_FILL_COLOR;
        else c = FOCUSED_FILL_COLOR;
    };
    
    if ( agent()->isActive() ) {
        if ( _selected ) c = ACTIVE_SELECTED_FILL_COLOR;
        else c = ACTIVE_FILL_COLOR;
    };
    return c;
    
}


// ********************************************************************************************************************
// *                                                                                                                  *
// *                                   Get "bright" fill color for process'es diagrams.                               *
// * ---------------------------------------------------------------------------------------------------------------- *
// *                                Получить "яркий" цвет заполнения для диаграмм процессов.                          *
// *                                                                                                                  *
// ********************************************************************************************************************

QColor tengu::AbstractAgentItem::_processDiagram_brightFillColor() {
    
    QColor d = _processDiagram_darkFillColor();
    int r = _brighter( d.red() );
    int g = _brighter( d.green() );
    int b = _brighter( d.blue() );
    return QColor( r, g, b );
    
}

// ********************************************************************************************************************
// *                                                                                                                  *
// *                       Get the "pen" for painting borders of elements of process diagram.                         *
// * ---------------------------------------------------------------------------------------------------------------- *
// *                   Получить "карандаш" для рисования границ элементов на диаграммах процессов.                    *
// *                                                                                                                  * 
// ********************************************************************************************************************

QPen tengu::AbstractAgentItem::_processDiagram_borderPen() {
    QPen pen;
    pen.setWidth( 3 );
    pen.setStyle( Qt::SolidLine );
    pen.setColor( _processDiagram_borderColor() );
    return pen;
}

// ********************************************************************************************************************
// *                                                                                                                  *
// *                                               Mouse press event handler.                                         *
// * ---------------------------------------------------------------------------------------------------------------- *
// *                                            Обработчик события нажатия мышки.                                     *
// *                                                                                                                  *
// ********************************************************************************************************************
/*
void tengu::AbstractAgentItem::mousePressEvent ( QGraphicsSceneMouseEvent * event ) {
    qDebug() << "AbstractAgentItem::mousePressEvent()" ;
    __mousePressed = true;
    QGraphicsItem::mousePressEvent ( event );
}
*/
// ********************************************************************************************************************
// *                                                                                                                  *
// *                                             Mouse release event handler.                                         *
// * ---------------------------------------------------------------------------------------------------------------- *
// *                                        Обработчик события отпускания мыши.                                       *
// *                                                                                                                  *
// ********************************************************************************************************************
/*
void tengu::AbstractAgentItem::mouseReleaseEvent ( QGraphicsSceneMouseEvent * event ) {
    qDebug() << "AbstractAgentItem::mouseReleaseEvent()" ;
    __mousePressed = false;
    QGraphicsItem::mouseReleaseEvent ( event );
}
*/
// ********************************************************************************************************************
// *                                                                                                                  *
// *                                             Mouse move event handler.                                            *
// * ---------------------------------------------------------------------------------------------------------------- *
// *                                         Обработчик события перемещения мыши.                                     *
// *                                                                                                                  *
// ********************************************************************************************************************
/*
void tengu::AbstractAgentItem::mouseMoveEvent ( QGraphicsSceneMouseEvent * event ) {
    qDebug() << "AbstractAgentItem::mouseMoveEvent()";
    QGraphicsItem::mouseMoveEvent ( event );
}
*/
// ********************************************************************************************************************
// *                                                                                                                  *
// *                                   Return properties list for this abstract agent.                                *
// * ---------------------------------------------------------------------------------------------------------------- *
// *                                       Вернуть список свойств данного агента.                                     *
// *                                                                                                                  *
// ********************************************************************************************************************

QList<QPair<QString,QString>> tengu::AbstractAgentItem::properties() {

    QList<QPair<QString, QString>> result;
    result.append( QPair<QString, QString>("UUID", agent()->uuid() ) );
    result.append( QPair<QString, QString>( tr("Name"), agent()->name() ) );
    result.append( QPair<QString, QString>( tr("Comment"), agent()->comment() ) );
    return result;
    
}

// ********************************************************************************************************************
// *                                                                                                                  *
// *                                                   The destructor.                                                *
// * ---------------------------------------------------------------------------------------------------------------- *
// *                                                      Деструктор.                                                 *
// *                                                                                                                  *
// ********************************************************************************************************************

tengu::AbstractAgentItem::~AbstractAgentItem() {
}


