// ********************************************************************************************************************
// *                                                                                                                  *
// *     Graphics representation of Sprout class (signal/slot mechanism, inter-agent redis-based communications).     *
// * ---------------------------------------------------------------------------------------------------------------- *
// *          Графическое представление класса Sprout ("росток' - механизм сигналов-слотов, межагентное общение,      *
// *                                                  основанное на redis'е.                                          *
// *                                                                                                                  *
// * Eugene G. Sysoletin <e.g.sysoletin@gmail.com>                                       Created 10 jun 2017 at 12:20 *
// ********************************************************************************************************************

#include "SproutItem.h"

// ********************************************************************************************************************
// *                                                                                                                  *
// *                                                   The constructor.                                               *
// * ---------------------------------------------------------------------------------------------------------------- *
// *                                                     Конструктор.                                                 *
// *                                                                                                                  *
// ********************************************************************************************************************

tengu::SproutItem::SproutItem ( tengu::Sprout * sprout, QGraphicsItem* parent ) 
    : AbstractAgentItem ( ( AbstractAgent * ) sprout , parent )
{
    _boundingRect = QRect( 0, 0, 68, 33 );
}

// ********************************************************************************************************************
// *                                                                                                                  *
// *                                                   The paint method.                                              *
// * ---------------------------------------------------------------------------------------------------------------- *
// *                                                    Метод отрисовки.                                              *
// *                                                                                                                  *
// ********************************************************************************************************************

void tengu::SproutItem::paint ( QPainter* painter, const QStyleOptionGraphicsItem* option, QWidget* widget ) {
    
    QPixmap pixmap( _boundingRect.width(), _boundingRect.height() ) ;
    QPainter pixPainter( & pixmap );
    pixPainter.eraseRect( _boundingRect );
    
    pixPainter.fillRect( _boundingRect, QColor( 192, 192, 192 ) );
    
    // --------------------------------------------------------------------------------------------
    //                                          The borders.
    //                                            Границы.
    // --------------------------------------------------------------------------------------------
    
    pixPainter.setPen( _processDiagram_borderPen() );
    
    
    // Top line for nose begin.
    // Верхняя линия до начала носика.    
    pixPainter.drawLine( 1, 1, 42, 1 );    
    // Left line
    // Линия слева.    
    pixPainter.drawLine( 1, 1, 1, 24 );    
    // Down line for nose begin.
    // Нижняя линия до начала носика.    
    pixPainter.drawLine( 1, 24, 42, 24 );    
    // right top line of the nose.
    // правая верхняя линия носика.    
    pixPainter.drawLine( 42, 1, 66, 12 );
    // right down line of the nose.
    // Правая нижняя линия носика.
    pixPainter.drawLine( 43, 24, 66, 12 );
    
    painter->drawPixmap( 0, 0, pixmap );
}

// ********************************************************************************************************************
// *                                                                                                                  *
// *                                                  The destructor.                                                 *
// * ---------------------------------------------------------------------------------------------------------------- *
// *                                                     Деструктор.                                                  *
// *                                                                                                                  *
// ********************************************************************************************************************

tengu::SproutItem::~SproutItem() {

}

