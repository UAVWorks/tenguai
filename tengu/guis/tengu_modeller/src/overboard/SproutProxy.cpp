// ********************************************************************************************************************
// *                                                                                                                  *
// *                      Sprout proxy (the sprout without real connection, only for signal names)                    *
// * ---------------------------------------------------------------------------------------------------------------- *
// *                   Заместитель Sprout'а (Sprout без реального соединения, только для имен сигналов).              *
// *                                                                                                                  *
// * Eugene G. Sysoletin <e.g.sysoletin@gmail.com>                                       Created 27 jun 2017 at 10:12 *
// ********************************************************************************************************************

#include "SproutProxy.h"

// ********************************************************************************************************************
// *                                                                                                                  *
// *                                                  The constructor.                                                *
// * ---------------------------------------------------------------------------------------------------------------- *
// *                                                     Конструктор.                                                 *
// *                                                                                                                  *
// ********************************************************************************************************************

tengu::SproutProxy::SproutProxy ( tengu::AbstractAgent * owner ) 
    : Sprout ( owner )
{

}

// ********************************************************************************************************************
// *                                                                                                                  *
// *                                           Subscribe to redis.io (the stub)                                       *
// * ---------------------------------------------------------------------------------------------------------------- *
// *                                             Подписка на редис (заглушка).                                        *
// *                                                                                                                  *
// ********************************************************************************************************************

void tengu::SproutProxy::subscribe() {
    
}

// ********************************************************************************************************************
// *                                                                                                                  *
// *                                          After subscribtion call (the stub).                                     *
// * ---------------------------------------------------------------------------------------------------------------- *
// *                                             Вызов после подписки (заглушка)                                      *
// *                                                                                                                  *
// ********************************************************************************************************************

void tengu::SproutProxy::subscribed ( QString channel ) {
    
}

// ********************************************************************************************************************
// *                                                                                                                  *
// *                                           Unsubscribtion procedure (the stub).                                   *
// * ---------------------------------------------------------------------------------------------------------------- *
// *                                               Процедура отписки (заглушка)                                       *
// *                                                                                                                  *
// ********************************************************************************************************************

void tengu::SproutProxy::unsubscribe() {
    
}

// ********************************************************************************************************************
// *                                                                                                                  *
// *                                        After unsubscribtion procedure (the stub).                                *
// * ---------------------------------------------------------------------------------------------------------------- *
// *                                            Процедура после отписки (заглушка).                                   *
// *                                                                                                                  *
// ********************************************************************************************************************

void tengu::SproutProxy::unsubscribed ( QString channel ) {
    
}

// ********************************************************************************************************************
// *                                                                                                                  *
// *                                            Handling the message (the proxy).                                     *
// * ---------------------------------------------------------------------------------------------------------------- *
// *                                           Обработка сообщения (заместитель).                                     *
// *                                                                                                                  *
// ********************************************************************************************************************

bool tengu::SproutProxy::handleMessage ( QString channel, QString message ) {
    
    if ( _to_me( channel ) ) return true;    
    return false;
    
}

// ********************************************************************************************************************
// *                                                                                                                  *
// *                                                    The destructor.                                               *
// * ---------------------------------------------------------------------------------------------------------------- *
// *                                                      Деструктор.                                                 *
// *                                                                                                                  *
// ********************************************************************************************************************

tengu::SproutProxy::~SproutProxy() {

}
