// ********************************************************************************************************************
// *                                                                                                                  *
// *                                An "entity" class, common parent for agents and sprouts.                          *
// * ---------------------------------------------------------------------------------------------------------------- *
// *                        Класс "сущности", общий предок для агентов и ростков (связей агентов)                     *
// *                                                                                                                  *
// * Eugene G. Sysoletin <e.g.sysoletin@gmail.com>                                       Created 11 jun 2017 at 12:36 *
// ********************************************************************************************************************

#include "AbstractEntity.h"

// ********************************************************************************************************************
// *                                                                                                                  *
// *                                                  The constructor.                                                *
// * ---------------------------------------------------------------------------------------------------------------- *
// *                                                     Конструктор.                                                 *
// *                                                                                                                  *
// ********************************************************************************************************************

tengu::AbstractEntity::AbstractEntity () 
{
    __name = QString("");
    __comment = QString("");
    
    // The UUID is very important parameter. It can not be changed except fromJSON constructor.
    // UUID - это очень важный параметр. Он может быть переставлен только из конструктора fromJSON.
    
    __uuid = QUuid::createUuid().toString();
    
    __execution_mode = EM_ALWAYS;    
    _changed = false;
    
    // Initialization for change time, (probably) will be replaced later.
    // Инициализация времени изменения, (наверное) потом будет изменена.
    
    __lastModified = QDateTime::currentDateTimeUtc();

}

// ********************************************************************************************************************
// *                                                                                                                  *
// *                                             Get name of this agent.                                              *
// * ---------------------------------------------------------------------------------------------------------------- *
// *                                            Получить имя этого агента.                                            *
// *                                                                                                                  *
// ********************************************************************************************************************

QString tengu::AbstractEntity::getName() {
    return __name;
}

// ********************************************************************************************************************
// *                                                                                                                  *
// *                                              Set name of this agent.                                             *
// * ---------------------------------------------------------------------------------------------------------------- *
// *                                           Установить имя данного агента.                                         *
// *                                                                                                                  *
// ********************************************************************************************************************

void tengu::AbstractEntity::setName ( QString name ) {
    __name = name;
    _somewhatChanged();    
}

// ********************************************************************************************************************
// *                                                                                                                  *
// *                                             Return UUID of this agent.                                           *
// * ---------------------------------------------------------------------------------------------------------------- *
// *                                            Вернуть UUID данного агента.                                          *
// *                                                                                                                  *
// ********************************************************************************************************************

QString tengu::AbstractEntity::getUUID() {
    return __uuid;
}

// ********************************************************************************************************************
// *                                                                                                                  *
// *                                               Set this agent uuid                                                *
// * ---------------------------------------------------------------------------------------------------------------- *
// *                                          Установить uuid данного агента.                                         *
// *                                                                                                                  *
// ********************************************************************************************************************
/*
void tengu::AbstractEntity::setUUID ( QString uuid ) {
    __uuid = uuid;
    _somewhatChanged();
}
*/
// ********************************************************************************************************************
// *                                                                                                                  *
// *                                               Get entity's comment.                                              *
// * ---------------------------------------------------------------------------------------------------------------- *
// *                                       Получить комментарий данноой "сущности".                                   *
// *                                                                                                                  *
// ********************************************************************************************************************

QString tengu::AbstractEntity::getComment() {
    return __comment;
}

// ********************************************************************************************************************
// *                                                                                                                  *
// *                                          Set comment for this "entity".                                          *
// * ---------------------------------------------------------------------------------------------------------------- *
// *                                      Установить комментарий данной "сущности".                                   *
// *                                                                                                                  *
// ********************************************************************************************************************

void tengu::AbstractEntity::setComment ( QString comment ) {
    __comment = comment;
    _somewhatChanged();
}

// ********************************************************************************************************************
// *                                                                                                                  *
// *                                         Return execution mode of this entity.                                    *
// * ---------------------------------------------------------------------------------------------------------------- *
// *                                      Вернуть режим выполнения данной сущности.                                   *
// *                                                                                                                  *
// ********************************************************************************************************************

tengu::AbstractEntity::execution_mode_t tengu::AbstractEntity::getExecutionMode() {
    return __execution_mode;
};

// ********************************************************************************************************************
// *                                                                                                                  *
// *                                       Set execution mode for this entity.                                        *
// * ---------------------------------------------------------------------------------------------------------------- *
// *                                 Установить режим выполнения для данной сущности.                                 *
// *                                                                                                                  *
// ********************************************************************************************************************

void tengu::AbstractEntity::setExecutionMode( tengu::AbstractEntity::execution_mode_t mode ) {
    __execution_mode = mode;
    _somewhatChanged();
};

// ********************************************************************************************************************
// *                                                                                                                  *
// *                                           Has been this entity changed?                                          *
// * ---------------------------------------------------------------------------------------------------------------- *
// *                                       Была ли данная "сущность" изменена?                                        *
// *                                                                                                                  *
// ********************************************************************************************************************

bool tengu::AbstractEntity::hasChanged() {
    return _changed;
}

// ********************************************************************************************************************
// *                                                                                                                  *
// *                                        Somewhat has been changed in the class.                                   *
// * ---------------------------------------------------------------------------------------------------------------- *
// *                                        Что-то в данном классе было изменено.                                     *
// *                                                                                                                  *
// ********************************************************************************************************************

void tengu::AbstractEntity::_somewhatChanged() {
    _changed = true;
    __lastModified = QDateTime::currentDateTimeUtc();
    // emit signalHasBeenChanged( __lastModified );
}

// ********************************************************************************************************************
// *                                                                                                                  *
// *                                    Return last modified time of this object, in the UTC.                         *
// * ---------------------------------------------------------------------------------------------------------------- *
// *                                Вернуть последнее время модификации данного объекта в UTC.                        *
// *                                                                                                                  *
// ********************************************************************************************************************

QDateTime tengu::AbstractEntity::lastModified() {
    return __lastModified;
}

// ********************************************************************************************************************
// *                                                                                                                  *
// *                                           Convert an entity to JSON format.                                      *
// * ---------------------------------------------------------------------------------------------------------------- *
// *                                       Преобразование "сущности" в формат JSON.                                   *
// *                                                                                                                  *
// ********************************************************************************************************************

QJsonObject tengu::AbstractEntity::toJSON() {
    
    QJsonObject o;
    
    o.insert("database", "tengu_entities");
    o.insert("uuid", __uuid );
    o.insert("name", __name );
    o.insert("comment", __comment );
    o.insert("execution_mode", (int) __execution_mode );
    o.insert("last_modified", __lastModified.toString("t yyyy-MM-dd hh:mm:ss:zzz") );
    
    /*
    QJsonArray indexes;
    QJsonArray idx_up;
    idx_up.insert("uuid");
    indexes.insert( idx_up );    
    o.insert("indexes", indexes );
    */
    
    return o;
    
}

// ********************************************************************************************************************
// *                                                                                                                  *
// *                                        Does json object have this class_name?                                    *
// * ---------------------------------------------------------------------------------------------------------------- *
// *                                       Имеет ли JSON-объект данное class_name?                                    *
// *                                                                                                                  *
// ********************************************************************************************************************

bool tengu::AbstractEntity::hasClass ( QJsonObject json, QString class_name ) {
    
    if ( json.contains("class_name") ) {
        QString cName = json.value("class_name").toString();
        if ( cName == class_name ) return true;
    };
    
    return false;
    
}

// ********************************************************************************************************************
// *                                                                                                                  *
// *                           Convert JSON notation to this object (the constructor from JSON).                      *
// * ---------------------------------------------------------------------------------------------------------------- *
// *                               Преобразование из JSON в объект ("конструктор" от JSON).                           *
// *                                                                                                                  *
// ********************************************************************************************************************

bool tengu::AbstractEntity::fromJSON ( QJsonObject json ) {
    
    if ( json.contains("uuid" ) ) __uuid = json.value("uuid").toString();
    if ( json.contains("name" ) ) __name = json.value("name").toString();
    if ( json.contains("execution_mode") ) __execution_mode = ( execution_mode_t ) json.value("execution_mode").toInt();
    if ( json.contains("last_modified") ) __lastModified = QDateTime::fromString( json.value("last_modified").toString(), "t yyyy-MM-dd hh:mm:ss:zzz" );
    
    return true;
    
}

// ********************************************************************************************************************
// *                                                                                                                  *
// *                                                    The destructor.                                               *
// * ---------------------------------------------------------------------------------------------------------------- *
// *                                                       Деструктор.                                                *
// *                                                                                                                  *
// ********************************************************************************************************************

tengu::AbstractEntity::~AbstractEntity() {

}


